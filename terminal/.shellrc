# Common settings for ~/.zshrc or ~/.bashrc files

# ---------------------------------- OS CHECK  ---------------------------------
IS_LINUX=false
IS_MAC=false
IS_WINDOWS=false
IS_WSL=false

# Determine OS by OS name (-s) and OS release (-r) like "Darwin 21.6.0"
case "$(uname -sr)" in #
Darwin*)
    OSFOUND="macOS"
    IS_MAC=true
    ;;
Linux*microsoft*)
    OSFOUND="WSL" # Windows Subsystem for Linux
    IS_WSL=true
    ;;
Linux*)
    OSFOUND="Linux"
    IS_LINUX=true
    ;;
MINGW* | CYGWIN* | MSYS*) # E.g. Git Bash for Windows
    OSFOUND="Windows"
    IS_WINDOWS=true
    ;;
*)
    OSFOUND="Other OS"
    ;;
esac

# -------------------------- ENV VARIABLES AND PATH  ---------------------------

# Default settings
export EDITOR="nvim"
export VISUAL="code -w"
export LANG="en_US.UTF-8"
# Common paths
export DOTFILES="$HOME/Dropbox/code/dotfiles"
export SCRIPTS_PATH="$HOME/Dropbox/code/dotfiles/scripts"

prepend_path() {
    # Prepend directory to PATH
    # Skipped if directory does not exist
    # Argument should be /absolute/path or ~/user/path
    if [ -d "$1" ]; then
        # Export to sub-processes (make it inherited by child processes)
        export PATH="$1:$PATH"
    fi
}

export BREW_HOME="$HOME/bin/homebrew"
export CONDA_HOME="$HOME/bin/homebrew/anaconda3"
export PYTHON_311_HOME="$HOME/Library/Python/3.11"
export VOLTA_HOME="$HOME/.volta"
# Order matters, first entry in PATH will take priority over later ones
prepend_path "$CONDA_HOME/bin"      # Conda lowest in precedence for Python
prepend_path "$HOME/.local/bin"     # Python packages store some bins here
prepend_path "$BREW_HOME/bin"       # Use base Python instead of conda Python by default
prepend_path "$PYTHON_311_HOME/bin" # User packages are installed here
prepend_path "$VOLTA_HOME/bin"      # Use Volta Node instead of global Node by default

# Clean-up
unset -f prepend_path

# ----------------------------------- TMUX -------------------------------------
bindkey -s ^f "tmux-sessionizer\n"
# Run TMUX if not in active session
if command -v tmux &>/dev/null && [ -z "$TMUX" ]; then
    # "command -v" pathname  or  command  that  will be used by the shell
    # "-z" returns true if the string is empty, false if it contains something
    # "$TMUX" used to check if a tmux session is active
    tmux attach -t main || tmux new -s main
fi

# ---------------------------------- PLUGINS -----------------------------------
# source $(brew --prefix)/opt/spaceship/spaceship.zsh
ZSH_THEME="spaceship"
source ~/.oh-my-zsh/custom/themes/spaceship-prompt/spaceship.zsh

# source ~/.config/antigen.zsh
# antigen bundle git
# antigen bundle zsh-users/zsh-autosuggestions
# # antigen bundle z-shell/fast-syntax-highlighting # Stopped working
# antigen bundle z-shell/F-Sy-H --branch=main
# antigen bundle zsh-users/zsh-syntax-highlighting
# antigen bundle zsh-users/zsh-history-substring-search
# # Configure zsh-history-substring-search keybindings to up arrow and down arrow
# bindkey '^[[A' history-substring-search-up
# bindkey '^[[B' history-substring-search-down
# # Tell Antigen that you're done.
# antigen appl

# autoload -U compinit

# Load aliases (and other custom settings)
source ~/.aliases
source $DOTFILES/terminal/.shellrc.private.sh

echo ".shellrc for $OSFOUND"
